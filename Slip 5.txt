Q.1


# Create two factors
factor1 <- factor(c("A", "B", "C"))
factor2 <- factor(c("X", "Y", "Z"))

# Concatenate the two factors
concatenated_factor <- c(factor1, factor2)

# Print the original factors
cat("Factor 1: ", levels(factor1), "\n")
cat("Factor 2: ", levels(factor2), "\n")

# Print the concatenated factor
cat("Concatenated Factor: ", levels(concatenated_factor), "\n")


Q.2


import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Load the dataset (downloaded from Kaggle)
# Make sure to adjust the path to the actual location where you have saved the dataset
data = pd.read_csv('C:\\Users\\siddhii\\.spyder-py3\\diabetes.csv')

# Display the first few rows of the dataset
print(data.head())

# Extract features (X) and target variable (y)
X = data.drop('Outcome', axis=1)
y = data['Outcome']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Build the Decision Tree Classifier
clf = DecisionTreeClassifier(random_state=42)
clf.fit(X_train, y_train)

# Make predictions on the test set
y_pred = clf.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

# Print the evaluation metrics
print(f'Accuracy: {accuracy:.4f}\n')
print('Confusion Matrix:\n', conf_matrix)
print('\nClassification Report:\n', class_report)
